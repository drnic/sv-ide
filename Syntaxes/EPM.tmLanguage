<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>epm</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\{\s*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*\}</string>
	<key>keyEquivalent</key>
	<string>^~E</string>
	<key>name</key>
	<string>EPM</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.epm</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.epm</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.epm</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.epm</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>match regular function like: fTT_RAT_ChgMethod#(const c_ChargeMethod&amp;) =</string>
			<key>match</key>
			<string>^([a-zA-Z_$]\w*(?:[$&amp;#?](?:{}|\[\])?))(\()(.*?)(\))\s+=\s*{?$</string>
			<key>name</key>
			<string>meta.function.epm</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|else|for|return|then|while)\b</string>
			<key>name</key>
			<string>keyword.control.untitled</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.untitled</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.untitled</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.epm</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?:^[ \t]*|[ \t]+)(#).*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.epm</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\.[0-9]+)?))\b</string>
			<key>name</key>
			<string>constant.numeric.epm</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(abort|debug|exists|is_defined|print|to_integer|to_string)\b</string>
			<key>name</key>
			<string>support.function.epm</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(var|const)\b</string>
			<key>name</key>
			<string>storage.modifier.epm</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bTRUE\b</string>
			<key>name</key>
			<string>constant.language.boolean.true.epm</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bFALSE\b</string>
			<key>name</key>
			<string>constant.language.boolean.false.epm</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\bNULL\b</string>
			<key>name</key>
			<string>constant.language.null.epm</string>
		</dict>
		<dict>
			<key>match</key>
			<string>:=</string>
			<key>name</key>
			<string>keyword.operator.assignment.epm</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.epm</string>
	<key>uuid</key>
	<string>5036AF97-29DF-4DA7-97F2-052D8FA1F8E2</string>
</dict>
</plist>
